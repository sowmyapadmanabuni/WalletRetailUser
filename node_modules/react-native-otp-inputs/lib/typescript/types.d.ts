declare type SetOtpTextForIndex = {
    type: 'setOtpTextForIndex';
    payload: {
        index: number;
        text: string;
    };
};
declare type SetOtpCode = {
    type: 'setOtpCode';
    payload: {
        numberOfInputs: number;
        code: string;
    };
};
declare type ClearOtp = {
    type: 'clearOtp';
    payload: number;
};
export declare type ReducerState = {
    otpCode: {
        [key: string]: string;
    };
    handleChange: (otpCode: string) => void;
};
export declare type ActionTypes = {
    setOtpTextForIndex: 'setOtpTextForIndex';
    setOtpCode: 'setOtpCode';
    clearOtp: 'clearOtp';
};
export declare type Actions = SetOtpTextForIndex | SetOtpCode | ClearOtp;
export declare type OtpInputsRef = {
    reset: () => void;
    focus: () => void;
};
export declare type KeyEventType = {
    action: number;
    pressedKey: string;
    keyCode: number;
};
export {};
