{"version":3,"sources":["index.tsx"],"names":["React","forwardRef","useCallback","useEffect","useImperativeHandle","useReducer","useRef","Clipboard","Keyboard","View","Platform","KeyEvent","OtpInput","OtpInputsRef","fillOtpCode","ACTION_TYPES","setOtpTextForIndex","setOtpCode","clearOtp","BACKSPACE_KEY_CODE","reducer","state","action","type","otpCode","payload","index","text","handleChange","Object","values","join","numberOfInputs","code","OtpInputs","ref","autoCapitalize","clearTextOnFocus","defaultValue","focusStyles","inputContainerStyles","inputStyles","isRTL","keyboardType","placeholder","secureTextEntry","selectTextOnFocus","style","testIDPrefix","restProps","dispatch","previousCopiedText","inputs","OS","onKeyUpListener","handleOnKeyUp","removeKeyUpListener","reset","current","forEach","input","clear","setString","focus","firstInput","event","findIndex","isFocused","keyCode","pressedKey","handleTextChange","handleInputTextChange","focusInput","length","handleClearInput","dismiss","handleKeyPress","key","nativeEvent","inputIndex","fillInputs","listenOnCopiedText","getString","copiedText","otpCodeValue","interval","setInterval","clearInterval","renderInputs","iterationArray","Array","fill","map","_","inputValue","createRef","keyPressEvent","defaultProps","console","log","flex","flexDirection","alignItems","justifyContent","borderColor","fontSize","paddingTop","textAlign","width","borderBottomWidth","height","margin"],"mappings":"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","sourcesContent":["import React, {\n  RefObject,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useReducer,\n  useRef,\n} from 'react';\nimport {\n  Clipboard,\n  Keyboard,\n  StyleProp,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewStyle,\n  Platform,\n  TextInputKeyPressEventData,\n  NativeSyntheticEvent,\n} from 'react-native';\nimport KeyEvent from 'react-native-keyevent';\n\nimport OtpInput from './OtpInput';\nimport { ActionTypes, OtpInputsRef, ReducerState, Actions, KeyEventType } from './types';\nimport { fillOtpCode } from './helpers';\n\ntype Props = TextInputProps & {\n  style?: StyleProp<ViewStyle>;\n  focusStyles?: StyleProp<ViewStyle>;\n  defaultValue?: string;\n  handleChange: (otpCode: string) => void;\n  inputContainerStyles?: StyleProp<ViewStyle>;\n  inputStyles?: StyleProp<TextStyle>;\n  isRTL?: boolean;\n  numberOfInputs: number;\n  testIDPrefix?: string;\n};\n\nconst ACTION_TYPES: ActionTypes = {\n  setOtpTextForIndex: 'setOtpTextForIndex',\n  setOtpCode: 'setOtpCode',\n  clearOtp: 'clearOtp',\n};\n\nconst BACKSPACE_KEY_CODE = 67;\n\nconst reducer = (state: ReducerState, action: Actions) => {\n  switch (action.type) {\n    case ACTION_TYPES.setOtpTextForIndex: {\n      const otpCode = { ...state.otpCode, [`${action.payload.index}`]: action.payload.text };\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return {\n        ...state,\n        otpCode,\n      };\n    }\n\n    case ACTION_TYPES.setOtpCode: {\n      const otpCode = fillOtpCode(action.payload.numberOfInputs, action.payload.code);\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return {\n        ...state,\n        otpCode,\n      };\n    }\n\n    case ACTION_TYPES.clearOtp: {\n      const otpCode = fillOtpCode(action.payload);\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return { ...state, otpCode };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst OtpInputs = forwardRef<OtpInputsRef, Props>(\n  (\n    {\n      autoCapitalize,\n      clearTextOnFocus,\n      defaultValue,\n      focusStyles,\n      handleChange,\n      inputContainerStyles,\n      inputStyles,\n      isRTL,\n      keyboardType,\n      numberOfInputs,\n      placeholder,\n      secureTextEntry,\n      selectTextOnFocus,\n      style,\n      testIDPrefix = 'otpInput',\n      ...restProps\n    },\n    ref,\n  ) => {\n    const [{ otpCode }, dispatch] = useReducer(reducer, {}, () => ({\n      otpCode: fillOtpCode(numberOfInputs, defaultValue),\n      handleChange,\n    }));\n    const previousCopiedText: { current: string } = useRef('');\n    const inputs: { current: Array<RefObject<TextInput>> } = useRef([]);\n\n    useEffect(() => {\n      if (Platform.OS === 'android') {\n        KeyEvent.onKeyUpListener(handleOnKeyUp);\n      }\n\n      return () => {\n        if (Platform.OS === 'android') {\n          KeyEvent.removeKeyUpListener();\n        }\n      };\n    }, []);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        reset: (): void => {\n          dispatch({ type: ACTION_TYPES.clearOtp, payload: numberOfInputs });\n          inputs.current.forEach(input => input && input.current && input.current.clear());\n          previousCopiedText.current = '';\n          Clipboard.setString('');\n        },\n        focus: (): void => {\n          const firstInput = inputs.current[0];\n          firstInput && firstInput.current && firstInput.current.focus();\n        },\n      }),\n      [numberOfInputs],\n    );\n\n    const handleOnKeyUp = (event: KeyEventType): void => {\n      const index = inputs.current.findIndex(input => {\n        return input.current && input.current.isFocused();\n      });\n      const text = event.keyCode === BACKSPACE_KEY_CODE ? '' : event.pressedKey;\n\n      handleTextChange(text, index);\n    };\n\n    const handleInputTextChange = ({ text, index }: { text: string; index: number }) => {\n      dispatch({\n        type: ACTION_TYPES.setOtpTextForIndex,\n        payload: {\n          text,\n          index,\n        },\n      });\n      focusInput(index + 1);\n    };\n\n    const handleTextChange = (text: string, index: number): void => {\n      if (!text.length) {\n        handleClearInput(index);\n      }\n\n      if (text) {\n        handleInputTextChange({ text, index });\n      }\n\n      if (index === numberOfInputs - 1 && text) {\n        Keyboard.dismiss();\n      }\n    };\n\n    const handleKeyPress = (\n      { nativeEvent: { key } }: NativeSyntheticEvent<TextInputKeyPressEventData>,\n      index: number,\n    ) => {\n      if (Platform.OS === 'ios' && key === 'Backspace') {\n        handleTextChange('', index);\n      }\n    };\n\n    const focusInput = useCallback(\n      (index: number): void => {\n        if (index >= 0 && index < numberOfInputs) {\n          const input = inputs.current[index];\n          input && input.current && input.current.focus();\n        }\n      },\n      [numberOfInputs],\n    );\n\n    const handleClearInput = useCallback(\n      (inputIndex: number) => {\n        const input = inputs.current[inputIndex];\n        input && input.current && input.current.clear();\n        dispatch({\n          type: ACTION_TYPES.setOtpTextForIndex,\n          payload: {\n            index: inputIndex,\n            text: '',\n          },\n        });\n        focusInput(inputIndex - 1);\n      },\n      [focusInput],\n    );\n\n    const fillInputs = useCallback(\n      (code: string) => {\n        dispatch({ type: ACTION_TYPES.setOtpCode, payload: { numberOfInputs, code } });\n      },\n      [numberOfInputs],\n    );\n\n    const listenOnCopiedText = useCallback(async (): Promise<void> => {\n      const copiedText = await Clipboard.getString();\n      const otpCodeValue = Object.values(otpCode).join('');\n\n      if (\n        copiedText &&\n        copiedText.length === numberOfInputs &&\n        copiedText !== otpCodeValue &&\n        copiedText !== previousCopiedText.current\n      ) {\n        previousCopiedText.current = copiedText;\n        fillInputs(copiedText);\n      }\n    }, [fillInputs, numberOfInputs, otpCode]);\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        listenOnCopiedText();\n      }, 500);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }, [listenOnCopiedText, numberOfInputs]);\n\n    const renderInputs = (): Array<JSX.Element> => {\n      const iterationArray = Array<number>(numberOfInputs).fill(0);\n\n      return iterationArray.map((_, index) => {\n        let inputIndex = index;\n        if (isRTL) {\n          inputIndex = numberOfInputs - 1 - index;\n        }\n        const inputValue = otpCode[`${inputIndex}`];\n\n        if (!inputs.current[inputIndex]) {\n          inputs.current[inputIndex] = React.createRef<TextInput>();\n        }\n\n        return (\n          <OtpInput\n            handleKeyPress={(keyPressEvent: NativeSyntheticEvent<TextInputKeyPressEventData>) =>\n              handleKeyPress(keyPressEvent, inputIndex)\n            }\n            autoCapitalize={autoCapitalize}\n            clearTextOnFocus={clearTextOnFocus}\n            firstInput={index === 0}\n            focusStyles={focusStyles}\n            handleTextChange={\n              Platform.OS === 'ios'\n                ? (text: string) => handleTextChange(text, inputIndex)\n                : () => {}\n            }\n            inputContainerStyles={inputContainerStyles}\n            inputStyles={inputStyles}\n            key={inputIndex}\n            keyboardType={keyboardType}\n            numberOfInputs={numberOfInputs}\n            placeholder={placeholder}\n            ref={inputs.current[inputIndex]}\n            secureTextEntry={secureTextEntry}\n            selectTextOnFocus={selectTextOnFocus}\n            testID={`${testIDPrefix}-${inputIndex}`}\n            inputValue={inputValue}\n            {...restProps}\n          />\n        );\n      });\n    };\n\n    return <View style={style}>{renderInputs()}</View>;\n  },\n);\n\nexport { OtpInputsRef };\nexport default OtpInputs;\n\n// @ts-ignore\nOtpInputs.defaultProps = {\n  autoCapitalize: 'none',\n  clearTextOnFocus: false,\n  handleChange: console.log,\n  keyboardType: 'phone-pad',\n  numberOfInputs: 4,\n  secureTextEntry: false,\n  selectTextOnFocus: true,\n  testIDPrefix: 'otpInput',\n  isRTL: false,\n  placeholder: '',\n  style: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  focusStyles: {\n    borderColor: '#00f',\n  },\n  inputStyles: {\n    fontSize: 24,\n    paddingTop: 10,\n    textAlign: 'center',\n    width: 40,\n  },\n  inputContainerStyles: {\n    borderBottomWidth: 1,\n    height: 53,\n    margin: 10,\n  },\n};\n"]}